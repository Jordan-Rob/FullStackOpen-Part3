{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","val","handler","value","onChange","PersonForm","formFunc","val1","handler1","val2","handler2","onSubmit","type","Persons","person","delHandler","name","number","onClick","baseUrl","newObject","axios","post","get","id","put","delete","Notification","message","includes","className","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","filters","setFilter","setMessage","useEffect","console","log","personsService","then","response","data","filtered","filter","event","target","preventDefault","find","window","confirm","exisPerson","changedPerson","map","setTimeout","catch","error","newObj","date","Date","concat","newPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e75f96.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({val, handler}) => {\r\n    return(\r\n        <div>Filter shown with <input value={val} onChange={handler} /></div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({formFunc, val1, handler1, val2, handler2}) => {\r\n    return(\r\n        <form onSubmit={formFunc}>\r\n            <div> name: <input value={val1} onChange={handler1} /> </div>\r\n            <div> number: <input value={val2} onChange={handler2} /> </div>\r\n            <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({person, delHandler}) => {\r\n    return(\r\n        <p>{person.name} -{ person.number }  <button onClick={delHandler} >delete</button></p>\r\n    )\r\n}\r\n\r\nexport default Persons;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst create = (newObject ) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteRes = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {create, getAll, update, deleteRes}","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        message.includes('deleted')? \r\n        <div className='error'>{message}</div>:\r\n        message.includes('unique')?\r\n        <div className='error'>{message}</div>:\r\n        <div className='success'>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport personsService from './services/persons';\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNum, setNewNum] = useState('')\r\n    const [filters, setFilter] = useState('')\r\n    const [message, setMessage] = useState('some notification')\r\n\r\n    useEffect( () => {\r\n      console.log('Effect')\r\n\r\n      personsService\r\n        .getAll()\r\n        .then( response => {\r\n          console.log('promise fullfilled')\r\n          setPersons(response.data)\r\n        })\r\n\r\n    } , [])\r\n  \r\n    const filtered = persons.filter( person => person.name.includes(filters) )\r\n\r\n    const addPerson = (event) => {\r\n      event.preventDefault()\r\n  \r\n      const existent = persons.find(person => person.name === newName)\r\n  \r\n      if (existent){\r\n        window.confirm(`${newName} is already added to phonebook, replace the \r\n        old number with a new one?`)\r\n\r\n        const exisPerson = persons.find(person => person.name === newName)\r\n        const changedPerson = { ...exisPerson, number:newNum}\r\n\r\n        personsService\r\n          .update(exisPerson.id, changedPerson)\r\n          .then( response => {\r\n            setPersons(persons.map( person => person.id !== exisPerson.id? person:response.data))\r\n            setMessage(\r\n              `${changedPerson.name}'s number was updated successfully`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n            setNewName('')\r\n            setNewNum('')\r\n          })\r\n          .catch( (error) => {\r\n            setMessage(\r\n              `${changedPerson.name} was already deleted `\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n              setPersons(persons.filter(person => person.id !== exisPerson.id))\r\n              setNewName('')\r\n              setNewNum('')\r\n          })\r\n\r\n      }else {\r\n      const newObj = {\r\n        name:newName,\r\n        number:newNum,\r\n        date: new Date(),\r\n        }\r\n        \r\n        personsService\r\n          .create(newObj)\r\n          .then(response => {\r\n            setPersons(persons.concat(response.data))\r\n            setMessage(\r\n              `${newObj.name} was added successfully`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n            setNewName('')\r\n            setNewNum('')\r\n          }).catch( error => {\r\n            setMessage(\r\n              `Enter a unique name and a 10 digit number : ${error.response.data}`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n      \r\n    }\r\n  \r\n    const inputChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewName(event.target.value)\r\n    }\r\n\r\n    const numChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNum(event.target.value)\r\n      }\r\n    \r\n    const filterChange = (event) => {\r\n      console.log(event.target.value)\r\n      setFilter(event.target.value)\r\n    }\r\n\r\n    const delHandler = (id) => {\r\n      const person = persons.find( person => person.id === id)\r\n      window.confirm(`Are you sure you want to delete ${person.name}`)\r\n      personsService\r\n        .deleteRes(person.id)\r\n        .then(response => {\r\n          console.log(response)\r\n          const newPersons = persons.filter(person => person.id !== id)\r\n          setPersons(newPersons)\r\n        })\r\n    }\r\n  \r\n  \r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <Notification message={message} />\r\n        <Filter val={filters} handler={filterChange} />\r\n        \r\n        <h3>Add a new</h3>\r\n\r\n        <PersonForm formFunc={addPerson} val1={newName} handler1={inputChange} val2={newNum} handler2={numChange} />\r\n        \r\n        <h2>Numbers</h2>\r\n        { filtered.map(person => <Persons person={person} delHandler={() => delHandler(person.id)} />) }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}